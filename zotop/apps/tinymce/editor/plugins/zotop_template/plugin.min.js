/**
 * plugin.js
 *
 * Released under LGPL License.
 * Copyright (c) 1999-2015 Ephox Corp. All rights reserved
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */
tinymce.PluginManager.add('zotop_template', function(editor, url) {

	var template = '<div class="edt-headline-adorn ehda-42">'+
            '<div class="ehda-title" data-color="1" data-border="1"><span rel="text" data-color="1" data-not-b="1" data-fontcolor="1">zotop</span></div>'+
            '<div class="ehda-num" data-color="1" rel="text">NO.1</div>'+
        '</div>';

	editor.addButton('zotop_template', {
		title: 'zotop template',
		icon: 'template',
		onclick: function() {
			editor.insertContent(template);
		}
	});

	editor.addButton('templatedelete', {
		title: 'delete template',
		icon: 'tabledelete',
		onclick: function() {

			var selection = editor.selection, dom = selection.dom;

			var template = getSelectedTemplate();

			var rng = dom.createRng();

			if (isEditorBody(template)) {
				return;
			}			

			rng.setStartAfter(template);
			rng.setEndAfter(template);

			selection.setRng(rng);

			dom.remove(template);
		}
	});

	function isEditorBody(node) {
		return node === editor.getBody();
	}	

	function getSelectedTemplate() {
		return editor.dom.getParent(editor.selection.getStart(), 'div.edt-headline-adorn');
	}		

	function isEditableTemplate(template) {
		var selectorMatched = editor.dom.is(template, 'div.edt-headline-adorn') && editor.getBody().contains(template);

		return selectorMatched;
	}	

	function addToolbars() {
		var toolbarItems = editor.settings.template_toolbar;

		if (toolbarItems === '' || toolbarItems === false) {
			return;
		}

		if (!toolbarItems) {
			toolbarItems = 'templatedelete';
		}

		editor.addContextToolbar(
			isEditableTemplate,
			toolbarItems
		);
	}

	addToolbars();

	function paddCell(cell) {

		if (!tinymce.Env.ie || tinymce.Env.ie > 9) {
			if (!cell.hasChildNodes()) {
				cell.innerHTML = '<br data-mce-bogus="2" />';
			}
		}

	}

	function placeCaretInCell(cell) {
		editor.selection.select(cell, true);
		editor.selection.collapse(true);
	}

	function clearCell(cell) {
		editor.$(cell).empty();
		paddCell(cell);
	}

	editor.on('keydown', function(e) {
		if ((e.keyCode == tinymce.util.VK.DELETE || e.keyCode == tinymce.util.VK.BACKSPACE) && !e.isDefaultPrevented()) {

			var template = getSelectedTemplate();

			if ( template ) {

				cell = editor.dom.getParent(editor.selection.getStart(), 'span');

				if ( cell ) {

					var range = editor.selection.getRng();

				     if ( range.startOffset == 0 ) {


				       e.preventDefault();
				       e.stopPropagation();
				 		editor.selection.select(cell, true);
		editor.selection.collapse(false);      
				       return false;
				     }

					return;

				}

				e.preventDefault();
			}
		}
	});

});