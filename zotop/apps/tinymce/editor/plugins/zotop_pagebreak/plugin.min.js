/**
 * plugin.js
 *
 * Released under LGPL License.
 * Copyright (c) 1999-2015 Ephox Corp. All rights reserved
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */

/*global tinymce:true */

tinymce.PluginManager.add('zotop_pagebreak', function(editor) {

	var pageBreakClass = 'mce-pagebreak';
	var	separatorHtml  = editor.getParam('pagebreak_separator', '<p class="mce-pagebreak"></p>');
	var pageBreakSeparatorRegExp = new RegExp(separatorHtml.replace(/[\?\.\*\[\]\(\)\{\}\+\^\$\:]/g, function(a) {
		return '\\' + a;
	}), 'gi');

	// Register commands
	editor.addCommand('mcePageBreak', function() {
		//在当前位置插入分页
        editor.execCommand('mceInsertContent', 0, separatorHtml);		
        
        //如果地第一个，则在最开始出插入分页
        if (editor.dom.select('p.' + pageBreakClass).length == 1) {
            
            editor.setContent(separatorHtml + editor.getContent());
            editor.nodeChanged();
            editor.selection.setCursorLocation(editor.getBody().firstChild, 0);
            //editor.execCommand('mceInsertContent', 0, separatorHtml);
            
        }
	});

	// Register buttons
	editor.addButton('pagebreak', {
		title: 'Page break',
		cmd: 'mcePageBreak',
        stateSelector: 'p.'+pageBreakClass
	});

	editor.addMenuItem('pagebreak', {
		text: 'Page break',
		icon: 'pagebreak',
		cmd: 'mcePageBreak',
		context: 'insert'
	});

	editor.on('ResolveName', function(e) {
		if (e.target.nodeName == 'p' && editor.dom.hasClass(e.target, pageBreakClass)) {
			e.name = 'pagebreak';
		}
	});

	editor.on('click', function(e) {
		e = e.target;
		if (e.nodeName === 'p' && editor.dom.hasClass(e, pageBreakClass)) {
			editor.selection.select(e);
		}
	});

    editor.on('keydown',function(e){
        var node, wrap
            selection = editor.selection,
            dom = editor.dom,
            keyCode = e.keyCode,            
            VK = tinymce.util.VK;

        node = selection.getNode();
        
        if ( node.nodeName === 'p' && dom.hasClass( node, pageBreakClass ) ) {
            wrap = node;
        }else {
            wrap = dom.getParent( node, 'p.'+pageBreakClass );
        }    

        if ( keyCode === VK.DELETE || keyCode === VK.BACKSPACE ) {

            if ( wrap && editor.dom.isEmpty(wrap) ) {
                dom.events.cancel(e);
                editor.dom.remove(wrap);
                editor.nodeChanged();
                editor.undoManager.add();
                //return false;
            }
        }

        if ( keyCode === VK.ENTER ) {
            if ( wrap ){
                dom.events.cancel(e);

                if ( !wrap.nextSibling || dom.hasClass(wrap.nextSibling,'mce-resize-bar') ) {
                    var spacer = tinymce.Env.ie && tinymce.Env.ie < 11 ? '' : '<br data-mce-bogus="1" />';
                    var P = dom.create('p', null, spacer);

                    dom.insertAfter(P, wrap);
                    editor.nodeChanged();
                    selection.setCursorLocation(P, 0); 
                }

                editor.selection.select(wrap.nextSibling);
                editor.selection.collapse(true);     

                return false;             
            }
        }           
    });

	editor.on('BeforeSetContent', function(e) {
		e.content = e.content.replace(pageBreakSeparatorRegExp, separatorHtml);
	});
});
